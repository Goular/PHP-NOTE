#① part start
#运行nginx进程的账户
#user www;
#
#worker_process 1;
#error_log /var/log/nginx/error.log
#pid /var/run/nginx.pid;

events{
    #use epoll;
    worker_connections 1024;
}

http{
    #include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    #access_log  /var/log/nginx/access.log  main;
    #
    sendfile        on;
    #
    keepalive_timeout  65;
    gzip  on;

    index   index.html index.htm;
    #include /etc/nginx/conf.d/*.conf;
    #include /etc/nginx/sites-enabled/*;
    #② part start
    # 定义上游服务器列表组
    upstream web1 {
        #server 127.0.0.1:111 weight=1;
        #server 127.0.0.1:222 weight=1;
		
		#ip_hash用于相同的IP访问当前网址，去到的内部服务器都是相同的，这样能够保证默认文件型session的唯一访问性质，可以保证不重复登录
		ip_hash;
		
		server 127.0.0.1:7071;
		server 127.0.0.1:7072;
    }
    upstream web2 {
        #server 127.0.0.2:111 weight=1;
        #server 127.0.0.2:222 weight=6;
        #server 127.0.0.2:333 weight=7;
		
		server 127.0.0.1:7073;
		server 127.0.0.1:7074;
		server 127.0.0.1:7075;
		server 127.0.0.1:7076;
    }
    #定义一个服务器，其监听80端口，配置的域名是www.out-server-1.com
    #server{
    #    listen 90;
        # using www  domain to access the main website
    #   server_name www.out-server-1.com;
        #access_log  /var/log/nginx/www.log

    #    location / {
    #        root F:\GitHub\PHP-NOTE\58Nginx\ReverseProxy\web-outter-1;

    #    }
    #}
    #③ part start
    #定义第二个服务器，其同样监听80端口，但是匹配域名是web.company.com
    #server{
    #    listen 90;
    #    # using web sub domain to access
    #    server_name web.company.com;
    #    access_log  /var/log/nginx/web_access.log
    #
    #    location / {
    #        root /home/web2_root;
    #        proxy_pass http://127.0.0.1:8080/web/;
    #        proxy_read_timeout 300;
    #        proxy_connect_timeout 300;
    #        proxy_redirect     off;
#
 #           proxy_set_header   X-Forwarded-Proto $scheme;
  #          proxy_set_header   Host              $http_host;
   #         proxy_set_header   X-Real-IP         $remote_addr;
    #    }
    #}
    #定义第三个服务器，其同样监听80端口，但是匹配域名是web1.company.com，并把请求转发到web1上游服务
    server{
        listen 90;
        # using web1 sub domain to access
        server_name www.out-server-1.com;
        #access_log  /var/log/nginx/web1_access.log

        location / {
            root F:\GitHub\PHP-NOTE\58Nginx\ReverseProxy\web-outter-1;
            proxy_pass http://web1;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_redirect     off;

            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-Real-IP         $remote_addr;
        }
    }
        #定义第三个服务器，其同样监听80端口，但是匹配域名是web2.company.com，并把请求转发到web2上游服务
    server{
        listen 90;
        # using web2 sub domain to access
        server_name www.out-server-2.com;
        #access_log  /var/log/nginx/web2_access.log

        location / {
            root F:\GitHub\PHP-NOTE\58Nginx\ReverseProxy\web-outter-2;
            proxy_pass http://web2;
            proxy_read_timeout 300;
            proxy_connect_timeout 300;
            proxy_redirect     off;

            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   Host              $http_host;
            proxy_set_header   X-Real-IP         $remote_addr;
        }
    }
}